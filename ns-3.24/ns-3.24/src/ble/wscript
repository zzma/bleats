## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def build(bld):
    obj = bld.create_ns3_module('ble', ['core', 'network', 'mobility', 'spectrum', 'propagation'])
    obj.source = [
        'model/ble-error-model.cc',
        'model/ble-interference-helper.cc',
        'model/ble-phy.cc',
        'model/ble-mac.cc',
        'model/ble-mac-header.cc',
        'model/ble-mac-trailer.cc',
        'model/ble-net-device.cc',
        'model/ble-spectrum-value-helper.cc',
        'model/ble-spectrum-signal-parameters.cc',
        'model/ble-lqi-tag.cc',
        'helper/ble-helper.cc',
        ]

    module_test = bld.create_ns3_module_test_library('ble')
    module_test.source = [
        'test/ble-ack-test.cc',
        'test/ble-collision-test.cc',
        'test/ble-ed-test.cc',
        'test/ble-error-model-test.cc',
        'test/ble-packet-test.cc',
        'test/ble-pd-plme-sap-test.cc',
        'test/ble-spectrum-value-helper-test.cc',
        ]
     
    headers = bld(features='ns3header')
    headers.module = 'ble'
    headers.source = [
        'model/ble-error-model.h',
        'model/ble-interference-helper.h',
        'model/ble-phy.h',
        'model/ble-mac.h',
        'model/ble-mac-header.h',
        'model/ble-mac-trailer.h',
        'model/ble-net-device.h',
        'model/ble-spectrum-value-helper.h',
        'model/ble-spectrum-signal-parameters.h',
        'model/ble-lqi-tag.h',
        'helper/ble-helper.h',
        ]

    if (bld.env['ENABLE_EXAMPLES']):
        bld.recurse('examples')

    bld.ns3_python_bindings()
